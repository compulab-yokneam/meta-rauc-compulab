test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B"
test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3
test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3

setenv bootpart
setenv raucslot

for BOOT_SLOT in "${BOOT_ORDER}"; do
    if test "x${bootpart}" != "x"; then
        # stop checking after selecting a slot
    elif test "x${BOOT_SLOT}" = "xA"; then
        if itest ${BOOT_A_LEFT} -gt 0; then
            setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1
            echo "Booting RAUC slot A"
            setenv bootpart 2
            setenv raucslot "A"
        fi
    elif test "x${BOOT_SLOT}" = "xB"; then
        if itest ${BOOT_B_LEFT} -gt 0; then
            setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1
            echo "Booting RAUC slot B"
            setenv bootpart 3
            setenv raucslot "B"
        fi
    fi
done

if test -z "${bootpart}"; then
    echo "No valid RAUC slot found. Resetting attempts to default"
    setenv BOOT_A_LEFT
    setenv BOOT_B_LEFT
    saveenv
    reset
fi

saveenv

setenv boot_dev @@BOOT_DEV@@
setenv os_boot_dev @@OS_BOOT_DEV@@

setenv os_root_dev ${os_boot_dev}p${bootpart}
# setenv bootargs console=${console} root=${os_root_dev} ${root_opt} rauc.slot=${raucslot}
setenv bootargs console=${console} root=${os_root_dev} ro rauc.slot=${raucslot}

#1 Default option the linux image and the device tree from the boot partition #1
# load mmc ${boot_dev}:1 ${loadaddr} ${image} && load mmc ${boot_dev}:1 ${fdt_addr_r} ${fdtfile} && booti ${loadaddr} - ${fdt_addr_r}

#2 Advanced option the linux image and the device tree from the boot folder of the rootfs
load mmc ${boot_dev}:${bootpart} ${loadaddr} boot/${image} && load mmc ${boot_dev}:${bootpart} ${fdt_addr_r} boot/${fdtfile} && booti ${loadaddr} - ${fdt_addr_r}
echo "Unable to get booted with RAUC"
